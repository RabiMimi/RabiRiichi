// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Server/Rpc/Streaming.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RabiRiichi.Server.Generated.Rpc {

  /// <summary>Holder for reflection information generated from Server/Rpc/Streaming.proto</summary>
  public static partial class StreamingReflection {

    #region Descriptor
    /// <summary>File descriptor for Server/Rpc/Streaming.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StreamingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpTZXJ2ZXIvUnBjL1N0cmVhbWluZy5wcm90bxodU2VydmVyL01lc3NhZ2Vz",
            "L01lc3NhZ2UucHJvdG8aIUFjdGlvbnMvU2luZ2xlUGxheWVySW5xdWlyeS5w",
            "cm90bxoSRXZlbnRzL0V2ZW50LnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1w",
            "dHkucHJvdG8iPQoWQ2xpZW50U3RyZWFtaW5nUmVxdWVzdBIcCgZjbGllbnQY",
            "ASABKAsyCi5DbGllbnRNc2dIAEIFCgNtc2cihgEKF1NlcnZlclN0cmVhbWlu",
            "Z1Jlc3BvbnNlEhwKBnNlcnZlchgBIAEoCzIKLlNlcnZlck1zZ0gAEioKB2lu",
            "cXVpcnkYAiABKAsyFy5TaW5nbGVQbGF5ZXJJbnF1aXJ5TXNnSAASGgoFZXZl",
            "bnQYAyABKAsyCS5FdmVudE1zZ0gAQgUKA21zZzJaChBTdHJlYW1pbmdTZXJ2",
            "aWNlEkYKC0Nvbm5lY3RHYW1lEhcuQ2xpZW50U3RyZWFtaW5nUmVxdWVzdBoY",
            "LlNlcnZlclN0cmVhbWluZ1Jlc3BvbnNlIgAoATABQiKqAh9SYWJpUmlpY2hp",
            "LlNlcnZlci5HZW5lcmF0ZWQuUnBjYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::RabiRiichi.Server.Generated.Messages.MessageReflection.Descriptor, global::RabiRiichi.Generated.Actions.SinglePlayerInquiryReflection.Descriptor, global::RabiRiichi.Generated.Events.EventReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RabiRiichi.Server.Generated.Rpc.ClientStreamingRequest), global::RabiRiichi.Server.Generated.Rpc.ClientStreamingRequest.Parser, new[]{ "Client" }, new[]{ "Msg" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RabiRiichi.Server.Generated.Rpc.ServerStreamingResponse), global::RabiRiichi.Server.Generated.Rpc.ServerStreamingResponse.Parser, new[]{ "Server", "Inquiry", "Event" }, new[]{ "Msg" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientStreamingRequest : pb::IMessage<ClientStreamingRequest> {
    private static readonly pb::MessageParser<ClientStreamingRequest> _parser = new pb::MessageParser<ClientStreamingRequest>(() => new ClientStreamingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientStreamingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RabiRiichi.Server.Generated.Rpc.StreamingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStreamingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStreamingRequest(ClientStreamingRequest other) : this() {
      switch (other.MsgCase) {
        case MsgOneofCase.Client:
          Client = other.Client.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStreamingRequest Clone() {
      return new ClientStreamingRequest(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Server.Generated.Messages.ClientMsg Client {
      get { return msgCase_ == MsgOneofCase.Client ? (global::RabiRiichi.Server.Generated.Messages.ClientMsg) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Client;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      Client = 1,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientStreamingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientStreamingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      if (MsgCase != other.MsgCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (msgCase_ == MsgOneofCase.Client) hash ^= Client.GetHashCode();
      hash ^= (int) msgCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (msgCase_ == MsgOneofCase.Client) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (msgCase_ == MsgOneofCase.Client) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientStreamingRequest other) {
      if (other == null) {
        return;
      }
      switch (other.MsgCase) {
        case MsgOneofCase.Client:
          if (Client == null) {
            Client = new global::RabiRiichi.Server.Generated.Messages.ClientMsg();
          }
          Client.MergeFrom(other.Client);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::RabiRiichi.Server.Generated.Messages.ClientMsg subBuilder = new global::RabiRiichi.Server.Generated.Messages.ClientMsg();
            if (msgCase_ == MsgOneofCase.Client) {
              subBuilder.MergeFrom(Client);
            }
            input.ReadMessage(subBuilder);
            Client = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerStreamingResponse : pb::IMessage<ServerStreamingResponse> {
    private static readonly pb::MessageParser<ServerStreamingResponse> _parser = new pb::MessageParser<ServerStreamingResponse>(() => new ServerStreamingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerStreamingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RabiRiichi.Server.Generated.Rpc.StreamingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStreamingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStreamingResponse(ServerStreamingResponse other) : this() {
      switch (other.MsgCase) {
        case MsgOneofCase.Server:
          Server = other.Server.Clone();
          break;
        case MsgOneofCase.Inquiry:
          Inquiry = other.Inquiry.Clone();
          break;
        case MsgOneofCase.Event:
          Event = other.Event.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStreamingResponse Clone() {
      return new ServerStreamingResponse(this);
    }

    /// <summary>Field number for the "server" field.</summary>
    public const int ServerFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Server.Generated.Messages.ServerMsg Server {
      get { return msgCase_ == MsgOneofCase.Server ? (global::RabiRiichi.Server.Generated.Messages.ServerMsg) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Server;
      }
    }

    /// <summary>Field number for the "inquiry" field.</summary>
    public const int InquiryFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.SinglePlayerInquiryMsg Inquiry {
      get { return msgCase_ == MsgOneofCase.Inquiry ? (global::RabiRiichi.Generated.Actions.SinglePlayerInquiryMsg) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Inquiry;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Events.EventMsg Event {
      get { return msgCase_ == MsgOneofCase.Event ? (global::RabiRiichi.Generated.Events.EventMsg) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Event;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      Server = 1,
      Inquiry = 2,
      Event = 3,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerStreamingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerStreamingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Server, other.Server)) return false;
      if (!object.Equals(Inquiry, other.Inquiry)) return false;
      if (!object.Equals(Event, other.Event)) return false;
      if (MsgCase != other.MsgCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (msgCase_ == MsgOneofCase.Server) hash ^= Server.GetHashCode();
      if (msgCase_ == MsgOneofCase.Inquiry) hash ^= Inquiry.GetHashCode();
      if (msgCase_ == MsgOneofCase.Event) hash ^= Event.GetHashCode();
      hash ^= (int) msgCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (msgCase_ == MsgOneofCase.Server) {
        output.WriteRawTag(10);
        output.WriteMessage(Server);
      }
      if (msgCase_ == MsgOneofCase.Inquiry) {
        output.WriteRawTag(18);
        output.WriteMessage(Inquiry);
      }
      if (msgCase_ == MsgOneofCase.Event) {
        output.WriteRawTag(26);
        output.WriteMessage(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (msgCase_ == MsgOneofCase.Server) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Server);
      }
      if (msgCase_ == MsgOneofCase.Inquiry) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inquiry);
      }
      if (msgCase_ == MsgOneofCase.Event) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerStreamingResponse other) {
      if (other == null) {
        return;
      }
      switch (other.MsgCase) {
        case MsgOneofCase.Server:
          if (Server == null) {
            Server = new global::RabiRiichi.Server.Generated.Messages.ServerMsg();
          }
          Server.MergeFrom(other.Server);
          break;
        case MsgOneofCase.Inquiry:
          if (Inquiry == null) {
            Inquiry = new global::RabiRiichi.Generated.Actions.SinglePlayerInquiryMsg();
          }
          Inquiry.MergeFrom(other.Inquiry);
          break;
        case MsgOneofCase.Event:
          if (Event == null) {
            Event = new global::RabiRiichi.Generated.Events.EventMsg();
          }
          Event.MergeFrom(other.Event);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::RabiRiichi.Server.Generated.Messages.ServerMsg subBuilder = new global::RabiRiichi.Server.Generated.Messages.ServerMsg();
            if (msgCase_ == MsgOneofCase.Server) {
              subBuilder.MergeFrom(Server);
            }
            input.ReadMessage(subBuilder);
            Server = subBuilder;
            break;
          }
          case 18: {
            global::RabiRiichi.Generated.Actions.SinglePlayerInquiryMsg subBuilder = new global::RabiRiichi.Generated.Actions.SinglePlayerInquiryMsg();
            if (msgCase_ == MsgOneofCase.Inquiry) {
              subBuilder.MergeFrom(Inquiry);
            }
            input.ReadMessage(subBuilder);
            Inquiry = subBuilder;
            break;
          }
          case 26: {
            global::RabiRiichi.Generated.Events.EventMsg subBuilder = new global::RabiRiichi.Generated.Events.EventMsg();
            if (msgCase_ == MsgOneofCase.Event) {
              subBuilder.MergeFrom(Event);
            }
            input.ReadMessage(subBuilder);
            Event = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
