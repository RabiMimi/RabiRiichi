// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Events/InGame/ClaimTileEvent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RabiRiichi.Generated.Events.InGame {

  /// <summary>Holder for reflection information generated from Events/InGame/ClaimTileEvent.proto</summary>
  public static partial class ClaimTileEventReflection {

    #region Descriptor
    /// <summary>File descriptor for Events/InGame/ClaimTileEvent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClaimTileEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJFdmVudHMvSW5HYW1lL0NsYWltVGlsZUV2ZW50LnByb3RvGhNDb3JlL0dh",
            "bWVUaWxlLnByb3RvGhJDb3JlL01lbkxpa2UucHJvdG8iawoRQ2xhaW1UaWxl",
            "RXZlbnRNc2cSGgoEdGlsZRgBIAEoCzIMLkdhbWVUaWxlTXNnEhoKBWdyb3Vw",
            "GAIgASgLMgsuTWVuTGlrZU1zZxIeCgZyZWFzb24YAyABKA4yDi5EaXNjYXJk",
            "UmVhc29uQiWqAiJSYWJpUmlpY2hpLkdlbmVyYXRlZC5FdmVudHMuSW5HYW1l",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::RabiRiichi.Generated.Core.GameTileReflection.Descriptor, global::RabiRiichi.Generated.Core.MenLikeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RabiRiichi.Generated.Events.InGame.ClaimTileEventMsg), global::RabiRiichi.Generated.Events.InGame.ClaimTileEventMsg.Parser, new[]{ "Tile", "Group", "Reason" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClaimTileEventMsg : pb::IMessage<ClaimTileEventMsg> {
    private static readonly pb::MessageParser<ClaimTileEventMsg> _parser = new pb::MessageParser<ClaimTileEventMsg>(() => new ClaimTileEventMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClaimTileEventMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RabiRiichi.Generated.Events.InGame.ClaimTileEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimTileEventMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimTileEventMsg(ClaimTileEventMsg other) : this() {
      tile_ = other.tile_ != null ? other.tile_.Clone() : null;
      group_ = other.group_ != null ? other.group_.Clone() : null;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimTileEventMsg Clone() {
      return new ClaimTileEventMsg(this);
    }

    /// <summary>Field number for the "tile" field.</summary>
    public const int TileFieldNumber = 1;
    private global::RabiRiichi.Generated.Core.GameTileMsg tile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Core.GameTileMsg Tile {
      get { return tile_; }
      set {
        tile_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 2;
    private global::RabiRiichi.Generated.Core.MenLikeMsg group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Core.MenLikeMsg Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private global::RabiRiichi.Generated.Core.DiscardReason reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Core.DiscardReason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClaimTileEventMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClaimTileEventMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Tile, other.Tile)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tile_ != null) hash ^= Tile.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tile_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tile);
      }
      if (group_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Group);
      }
      if (Reason != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tile);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClaimTileEventMsg other) {
      if (other == null) {
        return;
      }
      if (other.tile_ != null) {
        if (tile_ == null) {
          tile_ = new global::RabiRiichi.Generated.Core.GameTileMsg();
        }
        Tile.MergeFrom(other.Tile);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::RabiRiichi.Generated.Core.MenLikeMsg();
        }
        Group.MergeFrom(other.Group);
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tile_ == null) {
              tile_ = new global::RabiRiichi.Generated.Core.GameTileMsg();
            }
            input.ReadMessage(tile_);
            break;
          }
          case 18: {
            if (group_ == null) {
              group_ = new global::RabiRiichi.Generated.Core.MenLikeMsg();
            }
            input.ReadMessage(group_);
            break;
          }
          case 24: {
            reason_ = (global::RabiRiichi.Generated.Core.DiscardReason) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
