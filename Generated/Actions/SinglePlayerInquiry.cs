// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Actions/SinglePlayerInquiry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RabiRiichi.Generated.Actions {

  /// <summary>Holder for reflection information generated from Actions/SinglePlayerInquiry.proto</summary>
  public static partial class SinglePlayerInquiryReflection {

    #region Descriptor
    /// <summary>File descriptor for Actions/SinglePlayerInquiry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SinglePlayerInquiryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFBY3Rpb25zL1NpbmdsZVBsYXllcklucXVpcnkucHJvdG8aGUFjdGlvbnMv",
            "QWdhcmlBY3Rpb24ucHJvdG8aGEFjdGlvbnMvQ2hpaUFjdGlvbi5wcm90bxoX",
            "QWN0aW9ucy9LYW5BY3Rpb24ucHJvdG8aHEFjdGlvbnMvUGxheVRpbGVBY3Rp",
            "b24ucHJvdG8aF0FjdGlvbnMvUG9uQWN0aW9uLnByb3RvGh1BY3Rpb25zL1J5",
            "dXVreW9rdUFjdGlvbi5wcm90bxoYQWN0aW9ucy9Ta2lwQWN0aW9uLnByb3Rv",
            "IugCCg9QbGF5ZXJBY3Rpb25Nc2cSJwoMYWdhcmlfYWN0aW9uGAEgASgLMg8u",
            "QWdhcmlBY3Rpb25Nc2dIABIlCgtjaGlpX2FjdGlvbhgCIAEoCzIOLkNoaWlB",
            "Y3Rpb25Nc2dIABIjCgprYW5fYWN0aW9uGAMgASgLMg0uS2FuQWN0aW9uTXNn",
            "SAASLgoQcGxheV90aWxlX2FjdGlvbhgEIAEoCzISLlBsYXlUaWxlQWN0aW9u",
            "TXNnSAASKQoNcmlpY2hpX2FjdGlvbhgFIAEoCzIQLlJpaWNoaUFjdGlvbk1z",
            "Z0gAEiMKCnBvbl9hY3Rpb24YBiABKAsyDS5Qb25BY3Rpb25Nc2dIABIvChBy",
            "eXV1a3lva3VfYWN0aW9uGAcgASgLMhMuUnl1dWt5b2t1QWN0aW9uTXNnSAAS",
            "JQoLc2tpcF9hY3Rpb24YCCABKAsyDi5Ta2lwQWN0aW9uTXNnSABCCAoGYWN0",
            "aW9uIjsKFlNpbmdsZVBsYXllcklucXVpcnlNc2cSIQoHYWN0aW9ucxgBIAMo",
            "CzIQLlBsYXllckFjdGlvbk1zZ0IfqgIcUmFiaVJpaWNoaS5HZW5lcmF0ZWQu",
            "QWN0aW9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::RabiRiichi.Generated.Actions.AgariActionReflection.Descriptor, global::RabiRiichi.Generated.Actions.ChiiActionReflection.Descriptor, global::RabiRiichi.Generated.Actions.KanActionReflection.Descriptor, global::RabiRiichi.Generated.Actions.PlayTileActionReflection.Descriptor, global::RabiRiichi.Generated.Actions.PonActionReflection.Descriptor, global::RabiRiichi.Generated.Actions.RyuukyokuActionReflection.Descriptor, global::RabiRiichi.Generated.Actions.SkipActionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RabiRiichi.Generated.Actions.PlayerActionMsg), global::RabiRiichi.Generated.Actions.PlayerActionMsg.Parser, new[]{ "AgariAction", "ChiiAction", "KanAction", "PlayTileAction", "RiichiAction", "PonAction", "RyuukyokuAction", "SkipAction" }, new[]{ "Action" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RabiRiichi.Generated.Actions.SinglePlayerInquiryMsg), global::RabiRiichi.Generated.Actions.SinglePlayerInquiryMsg.Parser, new[]{ "Actions" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerActionMsg : pb::IMessage<PlayerActionMsg> {
    private static readonly pb::MessageParser<PlayerActionMsg> _parser = new pb::MessageParser<PlayerActionMsg>(() => new PlayerActionMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerActionMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RabiRiichi.Generated.Actions.SinglePlayerInquiryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerActionMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerActionMsg(PlayerActionMsg other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.AgariAction:
          AgariAction = other.AgariAction.Clone();
          break;
        case ActionOneofCase.ChiiAction:
          ChiiAction = other.ChiiAction.Clone();
          break;
        case ActionOneofCase.KanAction:
          KanAction = other.KanAction.Clone();
          break;
        case ActionOneofCase.PlayTileAction:
          PlayTileAction = other.PlayTileAction.Clone();
          break;
        case ActionOneofCase.RiichiAction:
          RiichiAction = other.RiichiAction.Clone();
          break;
        case ActionOneofCase.PonAction:
          PonAction = other.PonAction.Clone();
          break;
        case ActionOneofCase.RyuukyokuAction:
          RyuukyokuAction = other.RyuukyokuAction.Clone();
          break;
        case ActionOneofCase.SkipAction:
          SkipAction = other.SkipAction.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerActionMsg Clone() {
      return new PlayerActionMsg(this);
    }

    /// <summary>Field number for the "agari_action" field.</summary>
    public const int AgariActionFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.AgariActionMsg AgariAction {
      get { return actionCase_ == ActionOneofCase.AgariAction ? (global::RabiRiichi.Generated.Actions.AgariActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.AgariAction;
      }
    }

    /// <summary>Field number for the "chii_action" field.</summary>
    public const int ChiiActionFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.ChiiActionMsg ChiiAction {
      get { return actionCase_ == ActionOneofCase.ChiiAction ? (global::RabiRiichi.Generated.Actions.ChiiActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.ChiiAction;
      }
    }

    /// <summary>Field number for the "kan_action" field.</summary>
    public const int KanActionFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.KanActionMsg KanAction {
      get { return actionCase_ == ActionOneofCase.KanAction ? (global::RabiRiichi.Generated.Actions.KanActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.KanAction;
      }
    }

    /// <summary>Field number for the "play_tile_action" field.</summary>
    public const int PlayTileActionFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.PlayTileActionMsg PlayTileAction {
      get { return actionCase_ == ActionOneofCase.PlayTileAction ? (global::RabiRiichi.Generated.Actions.PlayTileActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.PlayTileAction;
      }
    }

    /// <summary>Field number for the "riichi_action" field.</summary>
    public const int RiichiActionFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.RiichiActionMsg RiichiAction {
      get { return actionCase_ == ActionOneofCase.RiichiAction ? (global::RabiRiichi.Generated.Actions.RiichiActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.RiichiAction;
      }
    }

    /// <summary>Field number for the "pon_action" field.</summary>
    public const int PonActionFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.PonActionMsg PonAction {
      get { return actionCase_ == ActionOneofCase.PonAction ? (global::RabiRiichi.Generated.Actions.PonActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.PonAction;
      }
    }

    /// <summary>Field number for the "ryuukyoku_action" field.</summary>
    public const int RyuukyokuActionFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.RyuukyokuActionMsg RyuukyokuAction {
      get { return actionCase_ == ActionOneofCase.RyuukyokuAction ? (global::RabiRiichi.Generated.Actions.RyuukyokuActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.RyuukyokuAction;
      }
    }

    /// <summary>Field number for the "skip_action" field.</summary>
    public const int SkipActionFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RabiRiichi.Generated.Actions.SkipActionMsg SkipAction {
      get { return actionCase_ == ActionOneofCase.SkipAction ? (global::RabiRiichi.Generated.Actions.SkipActionMsg) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.SkipAction;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      AgariAction = 1,
      ChiiAction = 2,
      KanAction = 3,
      PlayTileAction = 4,
      RiichiAction = 5,
      PonAction = 6,
      RyuukyokuAction = 7,
      SkipAction = 8,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerActionMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerActionMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgariAction, other.AgariAction)) return false;
      if (!object.Equals(ChiiAction, other.ChiiAction)) return false;
      if (!object.Equals(KanAction, other.KanAction)) return false;
      if (!object.Equals(PlayTileAction, other.PlayTileAction)) return false;
      if (!object.Equals(RiichiAction, other.RiichiAction)) return false;
      if (!object.Equals(PonAction, other.PonAction)) return false;
      if (!object.Equals(RyuukyokuAction, other.RyuukyokuAction)) return false;
      if (!object.Equals(SkipAction, other.SkipAction)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.AgariAction) hash ^= AgariAction.GetHashCode();
      if (actionCase_ == ActionOneofCase.ChiiAction) hash ^= ChiiAction.GetHashCode();
      if (actionCase_ == ActionOneofCase.KanAction) hash ^= KanAction.GetHashCode();
      if (actionCase_ == ActionOneofCase.PlayTileAction) hash ^= PlayTileAction.GetHashCode();
      if (actionCase_ == ActionOneofCase.RiichiAction) hash ^= RiichiAction.GetHashCode();
      if (actionCase_ == ActionOneofCase.PonAction) hash ^= PonAction.GetHashCode();
      if (actionCase_ == ActionOneofCase.RyuukyokuAction) hash ^= RyuukyokuAction.GetHashCode();
      if (actionCase_ == ActionOneofCase.SkipAction) hash ^= SkipAction.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (actionCase_ == ActionOneofCase.AgariAction) {
        output.WriteRawTag(10);
        output.WriteMessage(AgariAction);
      }
      if (actionCase_ == ActionOneofCase.ChiiAction) {
        output.WriteRawTag(18);
        output.WriteMessage(ChiiAction);
      }
      if (actionCase_ == ActionOneofCase.KanAction) {
        output.WriteRawTag(26);
        output.WriteMessage(KanAction);
      }
      if (actionCase_ == ActionOneofCase.PlayTileAction) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayTileAction);
      }
      if (actionCase_ == ActionOneofCase.RiichiAction) {
        output.WriteRawTag(42);
        output.WriteMessage(RiichiAction);
      }
      if (actionCase_ == ActionOneofCase.PonAction) {
        output.WriteRawTag(50);
        output.WriteMessage(PonAction);
      }
      if (actionCase_ == ActionOneofCase.RyuukyokuAction) {
        output.WriteRawTag(58);
        output.WriteMessage(RyuukyokuAction);
      }
      if (actionCase_ == ActionOneofCase.SkipAction) {
        output.WriteRawTag(66);
        output.WriteMessage(SkipAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.AgariAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgariAction);
      }
      if (actionCase_ == ActionOneofCase.ChiiAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChiiAction);
      }
      if (actionCase_ == ActionOneofCase.KanAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KanAction);
      }
      if (actionCase_ == ActionOneofCase.PlayTileAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayTileAction);
      }
      if (actionCase_ == ActionOneofCase.RiichiAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RiichiAction);
      }
      if (actionCase_ == ActionOneofCase.PonAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PonAction);
      }
      if (actionCase_ == ActionOneofCase.RyuukyokuAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RyuukyokuAction);
      }
      if (actionCase_ == ActionOneofCase.SkipAction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkipAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerActionMsg other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.AgariAction:
          if (AgariAction == null) {
            AgariAction = new global::RabiRiichi.Generated.Actions.AgariActionMsg();
          }
          AgariAction.MergeFrom(other.AgariAction);
          break;
        case ActionOneofCase.ChiiAction:
          if (ChiiAction == null) {
            ChiiAction = new global::RabiRiichi.Generated.Actions.ChiiActionMsg();
          }
          ChiiAction.MergeFrom(other.ChiiAction);
          break;
        case ActionOneofCase.KanAction:
          if (KanAction == null) {
            KanAction = new global::RabiRiichi.Generated.Actions.KanActionMsg();
          }
          KanAction.MergeFrom(other.KanAction);
          break;
        case ActionOneofCase.PlayTileAction:
          if (PlayTileAction == null) {
            PlayTileAction = new global::RabiRiichi.Generated.Actions.PlayTileActionMsg();
          }
          PlayTileAction.MergeFrom(other.PlayTileAction);
          break;
        case ActionOneofCase.RiichiAction:
          if (RiichiAction == null) {
            RiichiAction = new global::RabiRiichi.Generated.Actions.RiichiActionMsg();
          }
          RiichiAction.MergeFrom(other.RiichiAction);
          break;
        case ActionOneofCase.PonAction:
          if (PonAction == null) {
            PonAction = new global::RabiRiichi.Generated.Actions.PonActionMsg();
          }
          PonAction.MergeFrom(other.PonAction);
          break;
        case ActionOneofCase.RyuukyokuAction:
          if (RyuukyokuAction == null) {
            RyuukyokuAction = new global::RabiRiichi.Generated.Actions.RyuukyokuActionMsg();
          }
          RyuukyokuAction.MergeFrom(other.RyuukyokuAction);
          break;
        case ActionOneofCase.SkipAction:
          if (SkipAction == null) {
            SkipAction = new global::RabiRiichi.Generated.Actions.SkipActionMsg();
          }
          SkipAction.MergeFrom(other.SkipAction);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::RabiRiichi.Generated.Actions.AgariActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.AgariActionMsg();
            if (actionCase_ == ActionOneofCase.AgariAction) {
              subBuilder.MergeFrom(AgariAction);
            }
            input.ReadMessage(subBuilder);
            AgariAction = subBuilder;
            break;
          }
          case 18: {
            global::RabiRiichi.Generated.Actions.ChiiActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.ChiiActionMsg();
            if (actionCase_ == ActionOneofCase.ChiiAction) {
              subBuilder.MergeFrom(ChiiAction);
            }
            input.ReadMessage(subBuilder);
            ChiiAction = subBuilder;
            break;
          }
          case 26: {
            global::RabiRiichi.Generated.Actions.KanActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.KanActionMsg();
            if (actionCase_ == ActionOneofCase.KanAction) {
              subBuilder.MergeFrom(KanAction);
            }
            input.ReadMessage(subBuilder);
            KanAction = subBuilder;
            break;
          }
          case 34: {
            global::RabiRiichi.Generated.Actions.PlayTileActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.PlayTileActionMsg();
            if (actionCase_ == ActionOneofCase.PlayTileAction) {
              subBuilder.MergeFrom(PlayTileAction);
            }
            input.ReadMessage(subBuilder);
            PlayTileAction = subBuilder;
            break;
          }
          case 42: {
            global::RabiRiichi.Generated.Actions.RiichiActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.RiichiActionMsg();
            if (actionCase_ == ActionOneofCase.RiichiAction) {
              subBuilder.MergeFrom(RiichiAction);
            }
            input.ReadMessage(subBuilder);
            RiichiAction = subBuilder;
            break;
          }
          case 50: {
            global::RabiRiichi.Generated.Actions.PonActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.PonActionMsg();
            if (actionCase_ == ActionOneofCase.PonAction) {
              subBuilder.MergeFrom(PonAction);
            }
            input.ReadMessage(subBuilder);
            PonAction = subBuilder;
            break;
          }
          case 58: {
            global::RabiRiichi.Generated.Actions.RyuukyokuActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.RyuukyokuActionMsg();
            if (actionCase_ == ActionOneofCase.RyuukyokuAction) {
              subBuilder.MergeFrom(RyuukyokuAction);
            }
            input.ReadMessage(subBuilder);
            RyuukyokuAction = subBuilder;
            break;
          }
          case 66: {
            global::RabiRiichi.Generated.Actions.SkipActionMsg subBuilder = new global::RabiRiichi.Generated.Actions.SkipActionMsg();
            if (actionCase_ == ActionOneofCase.SkipAction) {
              subBuilder.MergeFrom(SkipAction);
            }
            input.ReadMessage(subBuilder);
            SkipAction = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class SinglePlayerInquiryMsg : pb::IMessage<SinglePlayerInquiryMsg> {
    private static readonly pb::MessageParser<SinglePlayerInquiryMsg> _parser = new pb::MessageParser<SinglePlayerInquiryMsg>(() => new SinglePlayerInquiryMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SinglePlayerInquiryMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RabiRiichi.Generated.Actions.SinglePlayerInquiryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SinglePlayerInquiryMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SinglePlayerInquiryMsg(SinglePlayerInquiryMsg other) : this() {
      actions_ = other.actions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SinglePlayerInquiryMsg Clone() {
      return new SinglePlayerInquiryMsg(this);
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RabiRiichi.Generated.Actions.PlayerActionMsg> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(10, global::RabiRiichi.Generated.Actions.PlayerActionMsg.Parser);
    private readonly pbc::RepeatedField<global::RabiRiichi.Generated.Actions.PlayerActionMsg> actions_ = new pbc::RepeatedField<global::RabiRiichi.Generated.Actions.PlayerActionMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RabiRiichi.Generated.Actions.PlayerActionMsg> Actions {
      get { return actions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SinglePlayerInquiryMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SinglePlayerInquiryMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!actions_.Equals(other.actions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= actions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      actions_.WriteTo(output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SinglePlayerInquiryMsg other) {
      if (other == null) {
        return;
      }
      actions_.Add(other.actions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
